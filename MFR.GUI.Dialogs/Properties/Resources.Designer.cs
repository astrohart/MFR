//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MFR.GUI.Dialogs.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MFR.GUI.Dialogs.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must type a value in the Commit Message text box..
        /// </summary>
        public static string Error_CommitMessageRequired {
            get {
                return ResourceManager.GetString("Error_CommitMessageRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An entry with the pathname, &apos;{0}&apos;, is already present in the list..
        /// </summary>
        public static string Error_ErrantProcessEntryAlreadyPresent {
            get {
                return ResourceManager.GetString("Error_ErrantProcessEntryAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add a new Errant Process entry.\n\n{0}.
        /// </summary>
        public static string Error_FailedAddErrantProcessEntry {
            get {
                return ResourceManager.GetString("Error_FailedAddErrantProcessEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to edit the specified Errant Process entry.
        ///
        ///{0}.
        /// </summary>
        public static string Error_FailedEditErrantProcessEntry {
            get {
                return ResourceManager.GetString("Error_FailedEditErrantProcessEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clear the entry(ies) in the Errant Processes list box.
        ///
        ///{0}.
        /// </summary>
        public static string Error_FailedRemoveAllErrantProcesses {
            get {
                return ResourceManager.GetString("Error_FailedRemoveAllErrantProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to remove the selected Errant Process entry from the list.
        ///
        ///{0}.
        /// </summary>
        public static string Error_FailedRemoveErrantProcessEntry {
            get {
                return ResourceManager.GetString("Error_FailedRemoveErrantProcessEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected Errant Process entry does not have an associated pathname specified..
        /// </summary>
        public static string Error_NoErrantProcessEntryPathname {
            get {
                return ResourceManager.GetString("Error_NoErrantProcessEntryPathname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please add Errant Process(es) to the list before trying to edit one of them..
        /// </summary>
        public static string Error_NoErrantProcessesToEdit {
            get {
                return ResourceManager.GetString("Error_NoErrantProcessesToEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There aren&apos;t any entry(ies) in the Errant Processes list box to remove..
        /// </summary>
        public static string Error_NoErrantProcessesToRemove {
            get {
                return ResourceManager.GetString("Error_NoErrantProcessesToRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the Errant Process entry that you wish to edit..
        /// </summary>
        public static string Error_NoErrantProcessSelectedForEditing {
            get {
                return ResourceManager.GetString("Error_NoErrantProcessSelectedForEditing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please click to highlight the Errant Process entry that is to be removed, and then click the Remove button..
        /// </summary>
        public static string Error_NoErrantProcessToBeRemovedIsSelected {
            get {
                return ResourceManager.GetString("Error_NoErrantProcessToBeRemovedIsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be null or whitespace..
        /// </summary>
        public static string Error_ValueCannotBeNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("Error_ValueCannotBeNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SpecialWindowsFolders|.
        /// </summary>
        public static string FolderSelectDialogFilters {
            get {
                return ResourceManager.GetString("FolderSelectDialogFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove all the entry(ies) currently in the Errant Processes list box?
        ///
        ///This action cannot be undone..
        /// </summary>
        public static string Question_ConfirmRemoveAllErrantProcesses {
            get {
                return ResourceManager.GetString("Question_ConfirmRemoveAllErrantProcesses", resourceCulture);
            }
        }
    }
}
